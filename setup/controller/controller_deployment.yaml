# Controller Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.cluster.username }}-cerebro-controller
  namespace: {{ .Values.cluster.namespace }}
  labels:
    app: cerebro-controller
    user: {{ .Values.cluster.username }}
spec:
  selector:
    matchLabels:
      app: cerebro-controller
      user: {{ .Values.cluster.username }}
  replicas: 1
  template:
    metadata:
      labels:
        app: cerebro-controller
        user: {{ .Values.cluster.username }}
    spec:
      hostname: controller
#      securityContext:
#        runAsUser: 1000
#        runAsGroup: 1000
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: brightcomputing.com/node-category
                operator: In
                values:
                - compute
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - cerebro-controller
              topologyKey: kubernetes.io/hostname
      serviceAccountName: {{ .Values.cluster.username }}
      containers:
      - name: controller
        image: {{ .Values.controller.image.core }}
        imagePullPolicy: Always
        workingDir: /cerebro-voyager
        command: [ "/bin/bash", "-c", "--" ]
        args: [ "/sync.sh; /cerebro-voyager/init.sh"]
        resources:
          limits:
            cpu: {{ .Values.cluster.resourceLimits.controllerCPU }}
            memory: {{ .Values.cluster.resourceLimits.controllerMemory }}
          requests:
            cpu: {{ .Values.cluster.resourceRequests.controllerCPU }}
            memory: {{ .Values.cluster.resourceRequests.controllerMemory }}
        env:
        - name: PLATFORM
          value: {{ .Values.controller.image.platform }}
        - name: GIT_SYNC_REPO
          value: {{ .Values.controller.image.gitURL }}
        - name: GIT_SYNC_BRANCH
          value: {{ .Values.controller.image.gitBranch }}
        - name: ML_METRICS_LOGDIR
          value: {{ .Values.controller.volumes.metricsPath }}
        - name: USERNAME
          value: {{ .Values.cluster.username }}
        - name: NAMESPACE
          value: {{ .Values.cluster.namespace }}
        volumeMounts:
        - name: user-code
          mountPath: {{ .Values.controller.volumes.userCodePath }}
        - name: checkpoint-storage
          mountPath: {{ .Values.controller.volumes.checkpointPath }}
        - name: data-storage
          mountPath: {{ .Values.controller.volumes.dataPath }}
        - name: metrics-storage
          mountPath: {{ .Values.controller.volumes.metricsPath }}
        - name: logs
          mountPath: {{ .Values.controller.volumes.logPath }}
        - name: dataset
          mountPath: {{ .Values.controller.volumes.datasetMountPath }}
        - name: kvs-storage
          mountPath: {{ .Values.controller.volumes.kvsPath }}
        - name: kube-config-volume
          mountPath: /root/.kube/config
        ports:
        - containerPort: {{ .Values.controller.services.jupyterPort }}
          name: jupyter-port
        - containerPort: {{ .Values.controller.services.tensorboardPort }}
          name: tnsrbrd-port
      volumes:
      - name: user-code
        hostPath:
          path: {{ .Values.controller.volumes.baseHostPath }}{{ .Values.controller.volumes.userCodePath }}
          type: Directory
      - name: checkpoint-storage
        hostPath:
          path: {{ .Values.controller.volumes.baseHostPath }}{{ .Values.controller.volumes.checkpointPath }}
          type: Directory
      - name: metrics-storage
        hostPath:
          path: {{ .Values.controller.volumes.baseHostPath }}{{ .Values.controller.volumes.metricsPath }}
          type: Directory
      - name: data-storage
        hostPath:
          path: {{ .Values.controller.volumes.baseHostPath }}{{ .Values.controller.volumes.dataPath }}
          type: Directory
      - name: logs
        hostPath:
          path: {{ .Values.controller.volumes.baseHostPath }}{{ .Values.controller.volumes.logPath }}
          type: Directory
      - name: dataset
        hostPath:
          path: {{ .Values.controller.volumes.datasetHostPath }}
          type: Directory
      - name: kvs-storage
        hostPath:
          path: {{ .Values.controller.volumes.baseHostPath }}{{ .Values.controller.volumes.kvsPath }}
          type: Directory
      - name: kube-config-volume
        hostPath:
          path: "/home/{{ .Values.cluster.username }}/.kube/config"
          type: File
